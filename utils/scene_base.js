// Generated by CoffeeScript 1.10.0
(function() {
  var SceneBase,
    slice = [].slice;

  SceneBase = (function() {
    function SceneBase() {
      var layer;
      this._renderer = null;
      layer = cc.Layer.create();
      this.setRenderer(layer);
    }

    SceneBase.prototype.destroy = function() {
      this.setRenderer(null);
      return this;
    };

    SceneBase.prototype.update = function(dt) {};

    SceneBase.prototype.getRenderer = function() {
      return this._renderer;
    };

    SceneBase.prototype.setRenderer = function(renderer) {
      var scene;
      if (this._renderer) {
        if (this._renderer.getParent()) {
          this._renderer.removeFromParent();
        }
        this._renderer.release();
        this._renderer = null;
      }
      if (renderer) {
        scene = cc.director.getRunningScene();
        scene.addChild(renderer);
        this._renderer = renderer;
        this._renderer.retain();
      }
      return this;
    };

    SceneBase.prototype.addChildRenderer = function() {
      var args, child_renderer, ref;
      child_renderer = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      cc.assert(child_renderer);
      cc.assert(this._renderer);
      (ref = this._renderer).addChild.apply(ref, [child_renderer].concat(slice.call(args)));
      return this;
    };

    SceneBase.prototype.addChild = function() {
      var args, child, child_renderer;
      child = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      cc.assert(child);
      child_renderer = child.getRenderer();
      cc.assert(child_renderer);
      this.addChildRenderer.apply(this, [child_renderer].concat(slice.call(args)));
      return this;
    };

    return SceneBase;

  })();

  utils.SceneBase = SceneBase;

}).call(this);

//# sourceMappingURL=scene_base.js.map
