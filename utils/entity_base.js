// Generated by CoffeeScript 1.10.0
(function() {
  var EntityBase,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  EntityBase = (function(superClass) {
    extend(EntityBase, superClass);

    function EntityBase() {
      EntityBase.__super__.constructor.apply(this, arguments);
      this._pos = cc.p(0, 0);
      this._velocity = cc.p(0, 0);
    }

    EntityBase.prototype.setPosition = function(x, y) {
      var renderer, x_changed, y_changed;
      x_changed = false;
      y_changed = false;
      if ((x != null) && x !== this._pos.x) {
        this._pos.x = x;
        x_changed = true;
      }
      if ((y != null) && y !== this._pos.y) {
        this._pos.y = y;
        y_changed = true;
      }
      if (x_changed || y_changed) {
        renderer = this.getRenderer();
        if (renderer) {
          return renderer.setPosition(this._pos.x, this._pos.y);
        }
      }
    };

    EntityBase.prototype.getPosition = function() {
      return cc.p(this._pos.x, this._pos.y);
    };

    EntityBase.prototype.setVelocity = function(vx, vy) {
      if (vx != null) {
        this._velocity.x = vx;
      }
      if (vy != null) {
        return this._velocity.y = vy;
      }
    };

    EntityBase.prototype.getVelocity = function() {
      return cc.p(this._velocity.x, this._velocity.y);
    };

    return EntityBase;

  })(utils.GameObject);

  utils.EntityBase = EntityBase;

}).call(this);

//# sourceMappingURL=entity_base.js.map
