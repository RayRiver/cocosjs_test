// Generated by CoffeeScript 1.10.0
(function() {
  var Player,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Player = (function(superClass) {
    extend(Player, superClass);

    function Player(config) {
      var dynamic, h, node, pos, ref, ref1, ref2, w;
      Player.__super__.constructor.apply(this, arguments);
      this.setTag("Player");
      config = config != null ? config : {};
      w = (ref = config.width) != null ? ref : 30;
      h = (ref1 = config.height) != null ? ref1 : 30;
      dynamic = (ref2 = config.dynamic) != null ? ref2 : false;
      this._world = config.world;
      this._width = w;
      this._height = h;
      node = cc.DrawNode.create();
      node.drawPoly([cc.p(-w / 2, -h / 2), cc.p(-w / 2, h / 2), cc.p(w / 2, h / 2), cc.p(w / 2, -h / 2)], cc.color(0, 255, 0, 128), 0.5, cc.color(0, 255, 0, 255));
      node.drawDot(cc.p(0, 0), 5, cc.color.GREEN);
      this.setRenderer(node);
      pos = this.getPosition();
      this._desired_box = [pos.x - w / 2, pos.y - h / 2, w, h];
      if (this._world) {
        if (dynamic) {
          this._world.add(this);
        } else {
          this._world.addStatic(this);
        }
      }
    }

    Player.prototype.update = function(dt) {
      var pos, velocity, vx, vy, x, y;
      Player.__super__.update.apply(this, arguments);
      pos = this.getPosition();
      velocity = this.getVelocity();
      x = pos.x;
      y = pos.y;
      vx = velocity.x;
      vy = velocity.y;
      x += vx * dt;
      y += vy * dt;
      this._desired_box[0] = x - this._width / 2;
      this._desired_box[1] = y - this._height / 2;
      this.setPosition(x, y);
    };

    Player.prototype.getBBox = function() {
      return this._desired_box;
    };

    return Player;

  })(utils.EntityBase);

  (typeof exports !== "undefined" && exports !== null ? exports : this).Player = Player;

}).call(this);

//# sourceMappingURL=player.js.map
